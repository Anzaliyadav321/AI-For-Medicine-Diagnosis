Now that we've covered 2D and 3D approaches to segmentation, let us dive into the
segmentation architectures. We'll start with the
segmentation architecture. We would use the 2D task to build-up to the segmentation
architecture for the 3D task. One of the most
popular architectures for segmentation
has been the U-Net. The U-Net was first designed for biomedical image segmentation and demonstrated great results on
the task of cell tracking. The cool thing about the U-Net, is that it can achieve
relatively good results, even with hundreds of examples. The U-Net architecture owes
its name to a U-like shape. The U-Net consists of two
paths: a contracting path, and an expanding path. The contracting path is a typical convolutional network like used in image
classification. It consists of repeated
application of convolution and
pooling operations. The convolution operation here is called a down convolution. The key here, is that in
the contracting path, our feature maps gets
spatially smaller, which is why it's
called a contraction. Then, there is the
expanding path. The expanding path in
some ways is doing the opposite of the
contracting path. It's taking our
small feature maps through a series of up-sampling and up-convolution steps to get back to the original
size of the image. It also concatenates the
up-sample representations at each step with the
corresponding feature maps at the contraction pathway. Finally, at the last step, the architecture
outputs the probability of tumor for every
pixel in the image. The U-Net architecture
can be trained on input output pairs of 2D
slices in the 2D approach. We've covered the U-Net
for the 2D approach. Let's see what we
can do when we have 3D subvolumes in the 3D approach. We can feed any 3D subvolume into a segmentation architecture, if we can replace all of the 2D operations with
their 3D counterparts. This is exactly what
an extension to the U-Net called
the 3D U-Net does. The 2D convolutions
become 3D convolutions, and the 2D pooling layers
become 3D pooling layers. It's okay if you haven't
seen 3D convolutions before. All that's important
to understand here is that the 3D U-Net
allows us to pass in 3D subvolumes and
get an output for every voxel in the volume specifying the
probability of a tumor. The 3D U-Net can be trained on subvolume input and outputs
as part of the 3D approach.